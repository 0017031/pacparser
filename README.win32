This file is about the instructions to build (and use) pacparser on Windows.
For general information on pacparser, please have a look at README in the same
directory.

Building pacparser on Windows:
-----------------------------
To build pacparser on Windows you'll have to install some helper utilities
first. For compiling and linking pacparser, you'll need MinGW (www.mingw.org)
tools which can produce native windows programs. Apart from that, pacparser
needs SpiderMonkey JavaScript interpreter to work. DLL for SpiderMonkey
JavaScript interpreter is bundled with Mozilla Firefox (js3250.dll), which
makes our job a little easier. But, to be able to compile against this DLL, we
need import library (yes, it's different on Windows). Creating this import
library is a two step process involving creation of definition file from .dll
file using dumpbin utility that comes with masm32, and then creation of import
library from that definition file and .dll file using dlltool.


Detailed Instructions:
----------------------
Create a working directory somewhere on your system. This is where you'll
install your tools and compile pacparser. Following instructions assume that
working directory is C:\devel.

1.  First of all we need an unzip utility. 7-zip is a good one and it's open
    source too. Download and install 7-zip on your system:
    http://downloads.sourceforge.net/sourceforge/sevenzip/7z442.exe
    (You can use any other unzip/unarchiver utility, but you'll have to modify
    rest of the instructions for that.)

2.  Add 7-zip binaries to your system path (My Computer -> Properties ->
    Advanced -> Environment Variables).

Set up tools:

3.  Download mingw packages -- gcc-core, mingw-runtime, w32api, binutils and
    make from mingw download page: http://www.mingw.org/download.shtml to your
    working directory. Direct links:

    http://downloads.sourceforge.net/mingw/gcc-core-3.4.5-20060117-1.tar.gz
    http://downloads.sourceforge.net/mingw/binutils-2.17.50-20060824-1.tar.gz
    http://downloads.sourceforge.net/mingw/mingw-runtime-3.13.tar.gz
    http://downloads.sourceforge.net/mingw/w32api-3.10.tar.gz
    http://downloads.sourceforge.net/mingw/mingw32-make-3.81-2.tar.gz

    However it's better to download latest packages from
    http://downloads.sourceforge.net/mingw.

4.  Get following packages from GnuWin32 project:
    http://gnuwin32.sourceforge.net/downlinks/libiconv-bin-zip.php
    http://gnuwin32.sourceforge.net/downlinks/libintl-bin-zip.php
    http://gnuwin32.sourceforge.net/downlinks/gawk-bin-zip.php
    and save them in your working directory.

5.  Next we need to get the dumpbin utility to create import library from
    js3250.dll that comes with Mozilla Firefox. dumpbin utility comes with
    MASM32 assembler (www.masm32.com). You can either download it from masm32
    webpage and add masm install directory to your path. Or, you can download
    minimal package from
    http://manugarg.googlepages.com/masm32-bin.zip
    to your working directory.

6.  Extract all the files into your working directory. In a command prompt
    window, run:
      cd c:\devel
      7z x *.gz -y
      7z x *.tar -y
      7z x *.zip -y

7.  Add your working directory's bin (C:\devel\bin) to your path.

======== Done setting up tools ==========

8.  Now download pacparser source code tarball from
    http://code.google.com/p/pacparser/downloads/list and save it in your
    working directory. Then extract it using 7z:
      cd c:\devel
      7z x pacparser*.tar.gz
      7z x pacparser*.tar

9. Compile pacparser. (Make sure that you have Firefox installed on your
   machine in standard location i.e. C:\Program Files\Mozilla Firefox before
   running this step.)
      cd c:\devel\pacparser-1.0.1 (for version 1.0.1)
      make -f Makefile.win32
    This will create pacparser.dll, libpacparser.a (file needed to link in
    pacparser with mingw compiler tools), pacparser.lib (file needed to link in
    pacparser on Visual Studio).

10. Move just compiled library and other files required at runtime to a
    directory (dist).
      make -f Makefile.win32 dist

11. Compile pacparser python module and copy required files to a directory
    (dist).
      make -f Makefile.win32 pymod
      make -f Makefile.win32 dist-pymod

Using pacparser on Windows:
--------------------------
* In C programs:

Make sure that you have 3 dlls - js3250.dll, nspr4.dll and pacparser.dll in the
sytem path somewhere (current directory would do just fine for testing purpose).
libpacparser.a is required only for compilation and can be in the same directory
as your program.
  Change to your program's directory:
  =>  cd c:\devel\pacparser-1.0.1\examples
  Download pacarser package (pacparser-1.0.1-win32.zip) from
  http://code.google.com/p/pacparser/downloads/list
  => xcopy c:\pacparser-1.0.1\* .
  Compile your program:
  => gcc -o pactest pactest.c -L. -lpacparser
  Run your program:
  => pactest wpad.dat http://www.google.com www.google.com
  'PROXY proxy1.manugarg.com:3128; PROXY proxy2.manugarg.com:3128; DIRECT'

* In python programs:

You can use it with python programs in the same way as for Unix-like systems.
  => C:\python25\python
  >>> import pacparser
  >>> pacparser.init()
  >>> pacparser.parse_pac('examples/wpad.dat')
  >>> pacparser.find_proxy('http://www.google.com', 'www.google.com')
  'PROXY proxy1.manugarg.com:3128; PROXY proxy2.manugarg.com:3128; DIRECT'
  >>> pacparser.cleanup()
